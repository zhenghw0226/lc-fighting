#two pointers
class Solution:
    def sortArrayByParityII(self, A: List[int]) -> List[int]:
        even = 0
        odd = 1
        while even < len(A) - 2 and odd < len(A) -1:
            while A[even] % 2 == 0 and even < len(A) - 2:
                even += 2
            while A[odd] % 2 == 1 and odd < len(A) - 1:
                odd += 2
            A[even],A[odd] = A[odd],A[even]

        if even == len(A) - 2 and odd == len(A) - 1:
            if A[even] %2 == 1 and A[odd] %2 == 0:
                A[even],A[odd] = A[odd],A[even]
        return A
class Solution:
    def sortArrayByParityII(self, A: List[int]) -> List[int]:
        odd = 1
        for even in range(0,len(A),2):
            if A[even] %2 == 1:
                while A[odd] %2 == 1:
                    odd += 2
                A[even],A[odd] = A[odd],A[even]
        return A
       
# two array
        
